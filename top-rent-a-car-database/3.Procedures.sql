CREATE PROCEDURE SP_FindCustomerRentalsCount(@FIRST_NAME VARCHAR(30), @LAST_NAME VARCHAR(30))
AS
BEGIN
SET NOCOUNT ON
SELECT FIRST_NAME, LAST_NAME,
COUNT(RENTAL_ID) AS RENTALS_COUNT
FROM CUSTOMER C JOIN RENTAL R ON R.CUSTOMER_ID = C.CUSTOMER_ID
WHERE FIRST_NAME = @FIRST_NAME AND LAST_NAME = @LAST_NAME
GROUP BY FIRST_NAME, LAST_NAME
END


EXEC SP_FindCustomerRentalsCount 'DANIEL', 'STOEV'


CREATE PROCEDURE SP_FindAvailableCarsForCustomer(@FIRST_NAME VARCHAR(30), @LAST_NAME VARCHAR(30))
AS
BEGIN
SET NOCOUNT ON
--maybe without min_age_req for faster query?
SELECT BRAND, MODEL, PRODUCTION_YEAR, HORSE_POWER, RENTAL_RATE, MIN_AGE_REQUIREMENT FROM CAR
WHERE MIN_AGE_REQUIREMENT <= DATEDIFF(YEAR, (SELECT BIRTH_DATE FROM CUSTOMER
			WHERE FIRST_NAME = @FIRST_NAME
			AND LAST_NAME = @LAST_NAME), GETDATE())
			AND IS_AVAILABLE = 1
END
		

EXEC SP_FindAvailableCarsForCustomer 'KRISTIYAN', 'KRAEV'


--Procedure that gets all calculated payment details for every rental
CREATE PROCEDURE SP_GetPaymentDetails
AS
BEGIN
    SET NOCOUNT ON

    SELECT 
        P.PAYMENT_ID, P.RENTAL_ID, INSURANCE_PRICE, DEPOSIT,
        DATEDIFF(DAY, PICKUP_DATE, RETURN_DATE) AS RENTAL_DAYS,
        (RENTAL_RATE * DATEDIFF(DAY, PICKUP_DATE, RETURN_DATE)) AS RENTAL_SUM,
        RENTAL_RATE,
        SUM(PRICE) AS EXTRAS_PRICE_TOTAL,
        TOTAL_AMOUNT
    FROM PAYMENT P
    JOIN RENTAL R ON R.RENTAL_ID = P.RENTAL_ID 
    JOIN CAR C ON C.CAR_ID = R.CAR_ID
    LEFT JOIN PAYMENT_EXTRAS PE ON PE.PAYMENT_ID = P.PAYMENT_ID
    LEFT JOIN EXTRAS E ON E.EXTRA_ID = PE.EXTRA_ID
    GROUP BY 
        P.PAYMENT_ID, 
		P.RENTAL_ID,
        INSURANCE_PRICE, 
        DEPOSIT,
        PICKUP_DATE, 
        RETURN_DATE,
        RENTAL_RATE, 
        TOTAL_AMOUNT
END

EXEC SP_GetPaymentDetails